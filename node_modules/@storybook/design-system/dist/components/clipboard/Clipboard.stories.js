"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WithFeedback = exports.Tooltips = exports.Callback = exports.Default = exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _addonActions = require("@storybook/addon-actions");

var _Clipboard = require("./Clipboard");

var _TooltipNote = require("../tooltip/TooltipNote");

// @ts-ignore
var _default = {
  title: 'Clipboard/Clipboard',
  decorators: [function (storyFn) {
    return /*#__PURE__*/_react["default"].createElement("div", {
      style: {
        padding: '3em'
      }
    }, storyFn());
  }]
};
exports["default"] = _default;

var Default = function Default() {
  return /*#__PURE__*/_react["default"].createElement(_Clipboard.Clipboard, {
    toCopy: "linky"
  }, "Click to copy");
};

exports.Default = Default;

var Callback = function Callback() {
  return /*#__PURE__*/_react["default"].createElement(_Clipboard.Clipboard, {
    getCopyContent: (0, _addonActions.action)('linky from callback')
  }, "Click to copy");
};

exports.Callback = Callback;

var Tooltips = function Tooltips() {
  return /*#__PURE__*/_react["default"].createElement(_Clipboard.Clipboard, {
    toCopy: "linky",
    renderCopiedTooltip: function renderCopiedTooltip() {
      return /*#__PURE__*/_react["default"].createElement(_TooltipNote.TooltipNote, {
        note: "Copied"
      });
    },
    renderUncopiedTooltip: function renderUncopiedTooltip() {
      return /*#__PURE__*/_react["default"].createElement(_TooltipNote.TooltipNote, {
        note: "Copy to clipboard"
      });
    } // @ts-ignore
    ,
    startOpen: true
  }, "Click to copy");
};

exports.Tooltips = Tooltips;

var WithFeedback = function WithFeedback() {
  return /*#__PURE__*/_react["default"].createElement(_Clipboard.Clipboard, {
    toCopy: "linky"
  }, function (copied) {
    return copied ? 'Copied' : 'Not yet copied';
  });
};

exports.WithFeedback = WithFeedback;