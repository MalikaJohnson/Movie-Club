import React from 'react';
declare type Status = 'default' | 'positive' | 'negative' | 'warning' | 'neutral' | 'link';
declare type Size = 'small' | 'large';
declare type Alignment = 'left' | 'center' | 'right';
interface CardinalProps {
    isLoading: boolean;
    selectable: boolean;
    active: boolean;
    size: Size;
    onHover: (e: boolean) => void;
    onClick: React.FormEventHandler<HTMLInputElement>;
    count: React.ReactNode;
    countLink: string;
    text: string;
    status: Status;
    noPlural: boolean;
    CountWrapper: React.ElementType;
    TextWrapper: React.ElementType;
    alignment?: Alignment;
}
export declare function Cardinal({ isLoading, selectable, onHover, onClick, active, size, count, countLink, text, noPlural, status, CountWrapper, TextWrapper, alignment, ...props }: CardinalProps): JSX.Element;
export declare namespace Cardinal {
    var defaultProps: {
        isLoading: boolean;
        selectable: boolean;
        onHover: () => number;
        onClick: () => number;
        active: boolean;
        size: string;
        status: string;
        count: string;
        countLink: any;
        noPlural: boolean;
        text: string;
        CountWrapper: React.FunctionComponent<{}>;
        TextWrapper: React.FunctionComponent<{}>;
        alignment: string;
    };
}
export {};
//# sourceMappingURL=Cardinal.d.ts.map