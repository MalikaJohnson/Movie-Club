export const validPlacements: any;
export default WithTooltip;
declare function WithTooltip({ tagName, trigger, closeOnClick, placement, modifiers, hasChrome, tooltip, children, startOpen, delayHide, onVisibilityChange, portalContainer, tooltipZIndex, ...props }: {
    [x: string]: any;
    tagName: any;
    trigger: any;
    closeOnClick: any;
    placement: any;
    modifiers: any;
    hasChrome: any;
    tooltip: any;
    children: any;
    startOpen: any;
    delayHide: any;
    onVisibilityChange: any;
    portalContainer: any;
    tooltipZIndex: any;
}): JSX.Element;
declare namespace WithTooltip {
    export namespace propTypes {
        export const tagName: PropTypes.Requireable<string>;
        export const trigger: PropTypes.Requireable<string>;
        export const closeOnClick: PropTypes.Requireable<boolean>;
        export const placement: PropTypes.Requireable<any>;
        export const modifiers: PropTypes.Requireable<PropTypes.InferProps<{}>>;
        export const hasChrome: PropTypes.Requireable<boolean>;
        export const tooltip: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        export const children: PropTypes.Validator<PropTypes.ReactNodeLike>;
        export const startOpen: PropTypes.Requireable<boolean>;
        export const delayHide: PropTypes.Requireable<number>;
        export const onVisibilityChange: PropTypes.Requireable<(...args: any[]) => any>;
        export const portalContainer: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        export const tooltipZIndex: PropTypes.Requireable<number>;
    }
    export namespace defaultProps {
        const tagName_1: any;
        export { tagName_1 as tagName };
        const trigger_1: string;
        export { trigger_1 as trigger };
        const closeOnClick_1: boolean;
        export { closeOnClick_1 as closeOnClick };
        const placement_1: string;
        export { placement_1 as placement };
        const modifiers_1: {};
        export { modifiers_1 as modifiers };
        const tooltip_1: any;
        export { tooltip_1 as tooltip };
        const portalContainer_1: any;
        export { portalContainer_1 as portalContainer };
        const hasChrome_1: boolean;
        export { hasChrome_1 as hasChrome };
        const startOpen_1: boolean;
        export { startOpen_1 as startOpen };
        const delayHide_1: number;
        export { delayHide_1 as delayHide };
        export function onVisibilityChange_1(): void;
        export { onVisibilityChange_1 as onVisibilityChange };
        const tooltipZIndex_1: any;
        export { tooltipZIndex_1 as tooltipZIndex };
    }
}
import PropTypes from "prop-types";
//# sourceMappingURL=WithTooltip.d.ts.map