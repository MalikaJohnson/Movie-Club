export function Tooltip({ placement, hasChrome, children, arrowProps, tooltipRef, arrowRef, zIndex, ...props }: {
    [x: string]: any;
    placement: any;
    hasChrome: any;
    children: any;
    arrowProps: any;
    tooltipRef: any;
    arrowRef: any;
    zIndex: any;
}): JSX.Element;
export namespace Tooltip {
    export namespace propTypes {
        export const children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        export const hasChrome: PropTypes.Requireable<boolean>;
        export const arrowProps: PropTypes.Requireable<any>;
        export const placement: PropTypes.Requireable<string>;
        export const arrowRef: PropTypes.Requireable<any>;
        export const tooltipRef: PropTypes.Requireable<any>;
        export const zIndex: PropTypes.Requireable<number>;
    }
    export namespace defaultProps {
        const children_1: any;
        export { children_1 as children };
        const hasChrome_1: boolean;
        export { hasChrome_1 as hasChrome };
        const placement_1: string;
        export { placement_1 as placement };
        const arrowProps_1: any;
        export { arrowProps_1 as arrowProps };
        const arrowRef_1: any;
        export { arrowRef_1 as arrowRef };
        const tooltipRef_1: any;
        export { tooltipRef_1 as tooltipRef };
        const zIndex_1: number;
        export { zIndex_1 as zIndex };
    }
}
import PropTypes from "prop-types";
//# sourceMappingURL=Tooltip.d.ts.map